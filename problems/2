
begin_problem(Implication).

list_of_descriptions.
name({*Implication*}).
author({*Lorenzo Pace*}).
status(unsatisfiable).
description({* Implication problem, generated by the tapes tool. *}).
end_of_list.
 
list_of_symbols.
 functions[(gcd, 2),(minus, 2)].
 predicates[(gt, 2),(lt, 2)].
end_of_list.
 
list_of_formulae(axioms).

formula(forall([v0], forall([w0], or(not(equal(v0, w0)), equal(gcd(v0,w0), v0)))), 1).
formula(forall([v0], forall([w0], or(not(gt(v0,w0)), equal(gcd(v0,w0), gcd(minus(v0,w0),w0))))), 2).
formula(forall([v0], forall([w0], or(not(lt(v0,w0)), equal(gcd(v0,w0), gcd(v0,minus(w0,v0)))))), 3).
formula(forall([v0], forall([w0], and(or(not(lt(v0,w0)), or(gt(v0,w0), equal(v0, w0))), or(not(or(gt(v0,w0), equal(v0, w0))), lt(v0,w0))))), 4).
end_of_list.

list_of_formulae(conjectures).
 
formula(forall([x0], forall([x1], forall([x2], forall([x3], or(not(exists([z1], exists([z3], and(and(and(and(and(and(and(true, and(true, equal(x0, x0))), true), and(true, equal(x1, x1))), true), and(true, equal(x2, x2))), and(true, equal(x3, x3))), and(and(and(and(true, equal(z1, z3)), equal(gcd(x2,x3), z3)), equal(gcd(x0,x1), z1)), equal(x0, x1)))))), exists([z1], and(and(and(and(and(and(true, and(true, equal(x0, x0))), true), and(true, equal(x1, x1))), and(true, equal(x2, x2))), and(true, equal(x3, x3))), and(and(and(true, equal(x0, z1)), equal(gcd(x2,x3), z1)), equal(x0, x1))))))))),5).
 
end_of_list.
 
end_problem.  

  
